{"ast":null,"code":"var _jsxFileName = \"D:\\\\user\\\\CFBF-main\\\\blood-donation-management\\\\client\\\\src\\\\components\\\\ui\\\\OTPModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { Phone, Shield, AlertCircle, CheckCircle } from 'lucide-react';\nimport Modal from './Modal';\nimport OTPInput from './OTPInput';\nimport CountdownTimer from './CountdownTimer';\nimport Button from './Button';\nimport logger from '../../utils/logger';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst OTPModal = ({\n  isOpen,\n  onClose,\n  phoneNumber,\n  purpose = 'verification',\n  onVerificationSuccess,\n  onVerificationError,\n  autoRequest = true,\n  className = ''\n}) => {\n  _s();\n  const [otp, setOtp] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isRequesting, setIsRequesting] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [otpRequested, setOtpRequested] = useState(false);\n  const [timerKey, setTimerKey] = useState(0);\n  const [remainingAttempts, setRemainingAttempts] = useState(3);\n  useEffect(() => {\n    if (isOpen) {\n      logger.componentMount('OTPModal', {\n        phoneNumber: phoneNumber === null || phoneNumber === void 0 ? void 0 : phoneNumber.slice(-4),\n        purpose,\n        autoRequest\n      });\n\n      // Auto-request OTP when modal opens\n      if (autoRequest && !otpRequested) {\n        requestOTP();\n      }\n    }\n    return () => {\n      if (isOpen) {\n        logger.componentUnmount('OTPModal');\n      }\n    };\n  }, [isOpen, autoRequest, otpRequested]);\n  useEffect(() => {\n    // Reset state when modal opens/closes\n    if (isOpen) {\n      setOtp('');\n      setError('');\n      setSuccess('');\n      setRemainingAttempts(3);\n    } else {\n      setOtpRequested(false);\n      setTimerKey(0);\n    }\n  }, [isOpen]);\n  const requestOTP = async () => {\n    if (!phoneNumber) {\n      logger.error('No phone number provided for OTP request', 'OTP_MODAL');\n      setError('Phone number is required');\n      return;\n    }\n    logger.ui('REQUEST', 'OTP', {\n      phoneNumber: phoneNumber.slice(-4),\n      purpose\n    }, 'OTP_MODAL');\n    setIsRequesting(true);\n    setError('');\n    try {\n      const response = await fetch('/api/v1/otp/request', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          phoneNumber,\n          purpose\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        logger.success('OTP requested successfully', 'OTP_MODAL');\n        setOtpRequested(true);\n        setTimerKey(prev => prev + 1); // Reset timer\n        setSuccess('OTP sent successfully to your phone');\n\n        // Clear success message after 3 seconds\n        setTimeout(() => setSuccess(''), 3000);\n      } else {\n        logger.error('OTP request failed', 'OTP_MODAL');\n        setError(data.message || 'Failed to send OTP');\n        if (onVerificationError) {\n          onVerificationError(data);\n        }\n      }\n    } catch (error) {\n      logger.error('Network error during OTP request', 'OTP_MODAL', error);\n      setError('Network error. Please check your connection and try again.');\n      if (onVerificationError) {\n        onVerificationError({\n          error: 'NETWORK_ERROR',\n          message: error.message\n        });\n      }\n    } finally {\n      setIsRequesting(false);\n    }\n  };\n  const verifyOTP = async otpCode => {\n    if (!otpCode || otpCode.length !== 6) {\n      logger.warn('Invalid OTP length', 'OTP_MODAL');\n      setError('Please enter a valid 6-digit OTP');\n      return;\n    }\n    logger.ui('VERIFY', 'OTP', {\n      phoneNumber: phoneNumber === null || phoneNumber === void 0 ? void 0 : phoneNumber.slice(-4),\n      otpLength: otpCode.length\n    }, 'OTP_MODAL');\n    setIsLoading(true);\n    setError('');\n    try {\n      const response = await fetch('/api/v1/otp/verify', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          phoneNumber,\n          otp: otpCode\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        logger.success('OTP verified successfully', 'OTP_MODAL');\n        setSuccess('Phone number verified successfully!');\n        if (onVerificationSuccess) {\n          onVerificationSuccess(data);\n        }\n\n        // Close modal after success\n        setTimeout(() => {\n          onClose();\n        }, 1500);\n      } else {\n        var _data$data;\n        logger.warn('OTP verification failed', 'OTP_MODAL');\n        setError(data.message || 'Invalid OTP');\n        setRemainingAttempts(((_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.remainingAttempts) || 0);\n        setOtp(''); // Clear OTP input\n\n        if (onVerificationError) {\n          onVerificationError(data);\n        }\n      }\n    } catch (error) {\n      logger.error('Network error during OTP verification', 'OTP_MODAL', error);\n      setError('Network error. Please check your connection and try again.');\n      if (onVerificationError) {\n        onVerificationError({\n          error: 'NETWORK_ERROR',\n          message: error.message\n        });\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleOTPComplete = otpCode => {\n    logger.ui('COMPLETE', 'OTPInput', {\n      otpLength: otpCode.length\n    }, 'OTP_MODAL');\n    verifyOTP(otpCode);\n  };\n  const handleResendOTP = async () => {\n    logger.ui('RESEND', 'OTP', {\n      phoneNumber: phoneNumber === null || phoneNumber === void 0 ? void 0 : phoneNumber.slice(-4)\n    }, 'OTP_MODAL');\n    await requestOTP();\n  };\n  const handleOTPExpire = () => {\n    logger.ui('EXPIRE', 'OTP', {\n      phoneNumber: phoneNumber === null || phoneNumber === void 0 ? void 0 : phoneNumber.slice(-4)\n    }, 'OTP_MODAL');\n    setError('OTP has expired. Please request a new one.');\n  };\n  const maskPhoneNumber = phone => {\n    if (!phone || phone.length < 4) return '****';\n    return phone.slice(0, 2) + '*'.repeat(phone.length - 4) + phone.slice(-2);\n  };\n  const getPurposeText = () => {\n    const purposeTexts = {\n      'registration': 'complete your registration',\n      'login': 'log into your account',\n      'verification': 'verify your phone number',\n      'password_reset': 'reset your password'\n    };\n    return purposeTexts[purpose] || 'verify your phone number';\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onClose: onClose,\n    title: \"Phone Verification\",\n    size: \"md\",\n    className: className,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inline-flex items-center justify-center w-16 h-16 bg-primary-100 dark:bg-primary-900/20 rounded-full mb-4\",\n          children: /*#__PURE__*/_jsxDEV(Shield, {\n            className: \"h-8 w-8 text-primary-600 dark:text-primary-400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold text-slate-900 dark:text-white mb-2\",\n          children: \"Verify Your Phone Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-slate-600 dark:text-slate-400\",\n          children: [\"We've sent a verification code to \", maskPhoneNumber(phoneNumber), \" to \", getPurposeText(), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-center space-x-2 p-3 bg-slate-50 dark:bg-slate-800 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(Phone, {\n          className: \"h-4 w-4 text-slate-500 dark:text-slate-400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm font-medium text-slate-700 dark:text-slate-300\",\n          children: maskPhoneNumber(phoneNumber)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), otpRequested && /*#__PURE__*/_jsxDEV(OTPInput, {\n        value: otp,\n        onChange: setOtp,\n        onComplete: handleOTPComplete,\n        disabled: isLoading,\n        error: error,\n        success: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this), otpRequested && /*#__PURE__*/_jsxDEV(CountdownTimer, {\n        initialTime: 300 // 5 minutes\n        ,\n        onExpire: handleOTPExpire,\n        onResend: handleResendOTP,\n        showResendButton: true\n      }, timerKey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this), remainingAttempts < 3 && remainingAttempts > 0 && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          y: 10\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        className: \"flex items-center justify-center space-x-2 text-sm text-orange-600 dark:text-orange-400\",\n        children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n          className: \"h-4 w-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [remainingAttempts, \" attempt\", remainingAttempts !== 1 ? 's' : '', \" remaining\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this), success && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          scale: 0.95\n        },\n        animate: {\n          opacity: 1,\n          scale: 1\n        },\n        className: \"flex items-center justify-center space-x-2 p-3 bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n          className: \"h-5 w-5 text-green-600 dark:text-green-400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm text-green-700 dark:text-green-300\",\n          children: success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-3\",\n        children: !otpRequested ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline\",\n            onClick: onClose,\n            className: \"flex-1\",\n            disabled: isRequesting,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: requestOTP,\n            loading: isRequesting,\n            className: \"flex-1\",\n            children: \"Send OTP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline\",\n            onClick: onClose,\n            className: \"flex-1\",\n            disabled: isLoading,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => verifyOTP(otp),\n            loading: isLoading,\n            disabled: otp.length !== 6,\n            className: \"flex-1\",\n            children: \"Verify\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-xs text-slate-500 dark:text-slate-400\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Didn't receive the code? Check your messages or try resending after the timer expires.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-1\",\n          children: \"For help, contact us at +91-911-BLOOD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n};\n_s(OTPModal, \"UTyfoonFMt300dPTQh64NtEAAyA=\");\n_c = OTPModal;\nexport default OTPModal;\nvar _c;\n$RefreshReg$(_c, \"OTPModal\");","map":{"version":3,"names":["React","useState","useEffect","motion","Phone","Shield","AlertCircle","CheckCircle","Modal","OTPInput","CountdownTimer","Button","logger","jsxDEV","_jsxDEV","Fragment","_Fragment","OTPModal","isOpen","onClose","phoneNumber","purpose","onVerificationSuccess","onVerificationError","autoRequest","className","_s","otp","setOtp","isLoading","setIsLoading","isRequesting","setIsRequesting","error","setError","success","setSuccess","otpRequested","setOtpRequested","timerKey","setTimerKey","remainingAttempts","setRemainingAttempts","componentMount","slice","requestOTP","componentUnmount","ui","response","fetch","method","headers","body","JSON","stringify","data","json","prev","setTimeout","message","verifyOTP","otpCode","length","warn","otpLength","_data$data","handleOTPComplete","handleResendOTP","handleOTPExpire","maskPhoneNumber","phone","repeat","getPurposeText","purposeTexts","title","size","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","onComplete","disabled","initialTime","onExpire","onResend","showResendButton","div","initial","opacity","y","animate","scale","variant","onClick","loading","_c","$RefreshReg$"],"sources":["D:/user/CFBF-main/blood-donation-management/client/src/components/ui/OTPModal.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { Phone, Shield, AlertCircle, CheckCircle } from 'lucide-react';\n\nimport Modal from './Modal';\nimport OTPInput from './OTPInput';\nimport CountdownTimer from './CountdownTimer';\nimport Button from './Button';\nimport logger from '../../utils/logger';\n\nconst OTPModal = ({\n  isOpen,\n  onClose,\n  phoneNumber,\n  purpose = 'verification',\n  onVerificationSuccess,\n  onVerificationError,\n  autoRequest = true,\n  className = ''\n}) => {\n  const [otp, setOtp] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isRequesting, setIsRequesting] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [otpRequested, setOtpRequested] = useState(false);\n  const [timerKey, setTimerKey] = useState(0);\n  const [remainingAttempts, setRemainingAttempts] = useState(3);\n\n  useEffect(() => {\n    if (isOpen) {\n      logger.componentMount('OTPModal', { phoneNumber: phoneNumber?.slice(-4), purpose, autoRequest });\n      \n      // Auto-request OTP when modal opens\n      if (autoRequest && !otpRequested) {\n        requestOTP();\n      }\n    }\n    \n    return () => {\n      if (isOpen) {\n        logger.componentUnmount('OTPModal');\n      }\n    };\n  }, [isOpen, autoRequest, otpRequested]);\n\n  useEffect(() => {\n    // Reset state when modal opens/closes\n    if (isOpen) {\n      setOtp('');\n      setError('');\n      setSuccess('');\n      setRemainingAttempts(3);\n    } else {\n      setOtpRequested(false);\n      setTimerKey(0);\n    }\n  }, [isOpen]);\n\n  const requestOTP = async () => {\n    if (!phoneNumber) {\n      logger.error('No phone number provided for OTP request', 'OTP_MODAL');\n      setError('Phone number is required');\n      return;\n    }\n\n    logger.ui('REQUEST', 'OTP', { phoneNumber: phoneNumber.slice(-4), purpose }, 'OTP_MODAL');\n    setIsRequesting(true);\n    setError('');\n\n    try {\n      const response = await fetch('/api/v1/otp/request', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          phoneNumber,\n          purpose\n        }),\n      });\n\n      const data = await response.json();\n\n      if (data.success) {\n        logger.success('OTP requested successfully', 'OTP_MODAL');\n        setOtpRequested(true);\n        setTimerKey(prev => prev + 1); // Reset timer\n        setSuccess('OTP sent successfully to your phone');\n        \n        // Clear success message after 3 seconds\n        setTimeout(() => setSuccess(''), 3000);\n      } else {\n        logger.error('OTP request failed', 'OTP_MODAL');\n        setError(data.message || 'Failed to send OTP');\n        \n        if (onVerificationError) {\n          onVerificationError(data);\n        }\n      }\n    } catch (error) {\n      logger.error('Network error during OTP request', 'OTP_MODAL', error);\n      setError('Network error. Please check your connection and try again.');\n      \n      if (onVerificationError) {\n        onVerificationError({ error: 'NETWORK_ERROR', message: error.message });\n      }\n    } finally {\n      setIsRequesting(false);\n    }\n  };\n\n  const verifyOTP = async (otpCode) => {\n    if (!otpCode || otpCode.length !== 6) {\n      logger.warn('Invalid OTP length', 'OTP_MODAL');\n      setError('Please enter a valid 6-digit OTP');\n      return;\n    }\n\n    logger.ui('VERIFY', 'OTP', { phoneNumber: phoneNumber?.slice(-4), otpLength: otpCode.length }, 'OTP_MODAL');\n    setIsLoading(true);\n    setError('');\n\n    try {\n      const response = await fetch('/api/v1/otp/verify', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          phoneNumber,\n          otp: otpCode\n        }),\n      });\n\n      const data = await response.json();\n\n      if (data.success) {\n        logger.success('OTP verified successfully', 'OTP_MODAL');\n        setSuccess('Phone number verified successfully!');\n        \n        if (onVerificationSuccess) {\n          onVerificationSuccess(data);\n        }\n        \n        // Close modal after success\n        setTimeout(() => {\n          onClose();\n        }, 1500);\n      } else {\n        logger.warn('OTP verification failed', 'OTP_MODAL');\n        setError(data.message || 'Invalid OTP');\n        setRemainingAttempts(data.data?.remainingAttempts || 0);\n        setOtp(''); // Clear OTP input\n        \n        if (onVerificationError) {\n          onVerificationError(data);\n        }\n      }\n    } catch (error) {\n      logger.error('Network error during OTP verification', 'OTP_MODAL', error);\n      setError('Network error. Please check your connection and try again.');\n      \n      if (onVerificationError) {\n        onVerificationError({ error: 'NETWORK_ERROR', message: error.message });\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleOTPComplete = (otpCode) => {\n    logger.ui('COMPLETE', 'OTPInput', { otpLength: otpCode.length }, 'OTP_MODAL');\n    verifyOTP(otpCode);\n  };\n\n  const handleResendOTP = async () => {\n    logger.ui('RESEND', 'OTP', { phoneNumber: phoneNumber?.slice(-4) }, 'OTP_MODAL');\n    await requestOTP();\n  };\n\n  const handleOTPExpire = () => {\n    logger.ui('EXPIRE', 'OTP', { phoneNumber: phoneNumber?.slice(-4) }, 'OTP_MODAL');\n    setError('OTP has expired. Please request a new one.');\n  };\n\n  const maskPhoneNumber = (phone) => {\n    if (!phone || phone.length < 4) return '****';\n    return phone.slice(0, 2) + '*'.repeat(phone.length - 4) + phone.slice(-2);\n  };\n\n  const getPurposeText = () => {\n    const purposeTexts = {\n      'registration': 'complete your registration',\n      'login': 'log into your account',\n      'verification': 'verify your phone number',\n      'password_reset': 'reset your password'\n    };\n    return purposeTexts[purpose] || 'verify your phone number';\n  };\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      title=\"Phone Verification\"\n      size=\"md\"\n      className={className}\n    >\n      <div className=\"space-y-6\">\n        {/* Header */}\n        <div className=\"text-center\">\n          <div className=\"inline-flex items-center justify-center w-16 h-16 bg-primary-100 dark:bg-primary-900/20 rounded-full mb-4\">\n            <Shield className=\"h-8 w-8 text-primary-600 dark:text-primary-400\" />\n          </div>\n          <h3 className=\"text-lg font-semibold text-slate-900 dark:text-white mb-2\">\n            Verify Your Phone Number\n          </h3>\n          <p className=\"text-sm text-slate-600 dark:text-slate-400\">\n            We've sent a verification code to {maskPhoneNumber(phoneNumber)} to {getPurposeText()}.\n          </p>\n        </div>\n\n        {/* Phone Number Display */}\n        <div className=\"flex items-center justify-center space-x-2 p-3 bg-slate-50 dark:bg-slate-800 rounded-lg\">\n          <Phone className=\"h-4 w-4 text-slate-500 dark:text-slate-400\" />\n          <span className=\"text-sm font-medium text-slate-700 dark:text-slate-300\">\n            {maskPhoneNumber(phoneNumber)}\n          </span>\n        </div>\n\n        {/* OTP Input */}\n        {otpRequested && (\n          <OTPInput\n            value={otp}\n            onChange={setOtp}\n            onComplete={handleOTPComplete}\n            disabled={isLoading}\n            error={error}\n            success={success}\n          />\n        )}\n\n        {/* Countdown Timer */}\n        {otpRequested && (\n          <CountdownTimer\n            key={timerKey}\n            initialTime={300} // 5 minutes\n            onExpire={handleOTPExpire}\n            onResend={handleResendOTP}\n            showResendButton={true}\n          />\n        )}\n\n        {/* Remaining Attempts */}\n        {remainingAttempts < 3 && remainingAttempts > 0 && (\n          <motion.div\n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"flex items-center justify-center space-x-2 text-sm text-orange-600 dark:text-orange-400\"\n          >\n            <AlertCircle className=\"h-4 w-4\" />\n            <span>{remainingAttempts} attempt{remainingAttempts !== 1 ? 's' : ''} remaining</span>\n          </motion.div>\n        )}\n\n        {/* Success State */}\n        {success && (\n          <motion.div\n            initial={{ opacity: 0, scale: 0.95 }}\n            animate={{ opacity: 1, scale: 1 }}\n            className=\"flex items-center justify-center space-x-2 p-3 bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg\"\n          >\n            <CheckCircle className=\"h-5 w-5 text-green-600 dark:text-green-400\" />\n            <span className=\"text-sm text-green-700 dark:text-green-300\">{success}</span>\n          </motion.div>\n        )}\n\n        {/* Action Buttons */}\n        <div className=\"flex space-x-3\">\n          {!otpRequested ? (\n            <>\n              <Button\n                variant=\"outline\"\n                onClick={onClose}\n                className=\"flex-1\"\n                disabled={isRequesting}\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={requestOTP}\n                loading={isRequesting}\n                className=\"flex-1\"\n              >\n                Send OTP\n              </Button>\n            </>\n          ) : (\n            <>\n              <Button\n                variant=\"outline\"\n                onClick={onClose}\n                className=\"flex-1\"\n                disabled={isLoading}\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={() => verifyOTP(otp)}\n                loading={isLoading}\n                disabled={otp.length !== 6}\n                className=\"flex-1\"\n              >\n                Verify\n              </Button>\n            </>\n          )}\n        </div>\n\n        {/* Help Text */}\n        <div className=\"text-center text-xs text-slate-500 dark:text-slate-400\">\n          <p>Didn't receive the code? Check your messages or try resending after the timer expires.</p>\n          <p className=\"mt-1\">For help, contact us at +91-911-BLOOD</p>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default OTPModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}